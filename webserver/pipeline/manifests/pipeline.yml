apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: webserver-build
spec:

  workspaces:
  - name: shared
  - name: ssh-dir
  - name: dockerconfig

  params:
  - name: IMAGE_NAME
    type: string
    default: registry.straubcloud.de/webserver
  - name: GIT_REPO
    type: string
    default: git@github.com:dstraub/lab-sample.git
  - name: GIT_REVISION
    type: string
    default: main
  - name: GIT_SHORT_REVISION
    type: string
    default: "not_provided"
  - name: STAGE
    type: string
    default: prod

  tasks:
  - name: fetch-repo
    taskRef:
      resolver: cluster 
      params:
      - name: name
        value: git-clone
      - name: namespace
        value: openshift-pipelines
      - name: kind
        value: task
    params:
    - name: URL
      value: $(params.GIT_REPO)
    - name: REVISION
      value: $(params.GIT_REVISION)
    - name: VERBOSE
      value: "false"
    workspaces:
    - name: output
      workspace: shared
    - name: ssh-directory
      workspace: ssh-dir

  - name: build-image
    params:
    - name: IMAGE
      value: $(params.IMAGE_NAME)
    - name: CONTEXT
      value: webserver/container
    - name: BUILD_EXTRA_ARGS
      value: --build-arg=WEBSERVER_VERSION=$(params.GIT_SHORT_REVISION) --build-arg=COMMIT=$(tasks.fetch-repo.results.COMMIT)
    - name: DOCKERFILE
      value: webserver/container/Dockerfile
    taskRef:
      resolver: cluster 
      params:
      - name: name
        value: buildah
      - name: namespace
        value: openshift-pipelines
      - name: kind
        value: task
    workspaces:
    - name: source
      workspace: shared
    - name: dockerconfig
      workspace: dockerconfig

  - name: update-image
    params:
    - name: IMAGE_NAME
      value: $(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
    - name: CONTAINER_NAME
      value: webserver
    - name: STAGE
      value: $(params.STAGE)
    taskRef:
      name: update-image
    workspaces:
    - name: source
      workspace: shared

  - name: commit-changes
    params:
    - name: GIT_USER_NAME
      value: pipeline
    - name: GIT_USER_EMAIL
      value: pipeline@openshift
    - name: DELETE_EXISTING
      value: "false"
    - name: GIT_SCRIPT
      value: |
        git config --global --add safe.directory /workspace/source
        git commit -m "pipeline update" $(tasks.update-image.results.CHANGED)
        git push origin HEAD:main
    - name: VERBOSE
      value: "false" 
    taskRef:
      resolver: cluster 
      params:
      - name: name
        value: git-cli
      - name: namespace
        value: openshift-pipelines
      - name: kind
        value: task
    workspaces:
    - name: source
      workspace: shared
    - name: ssh-directory
      workspace: ssh-dir

  - name: trigger-argo
    runAfter: 
    - commit-changes
    params:
    - name: application
      value: stage-$(params.STAGE)
    - name: timeout 
      value: "180"
    taskRef:
      name: trigger-argo
 

